import numpy as np
#%matplotlib notebook
%matplotlib inline
import matplotlib.pyplot as plt
from IPython.core.debugger import set_trace
import warnings
warnings.filterwarnings('ignore')

from typing import List
from tqdm import tqdm

# Assuming the dataset was downloaded from Kaggle, tar file unzipped,
# and is on your Desktop in a file called archive

# Set up the home directory
home_directory = os.path.expanduser("~")

# File paths for the dataset
train_file_path = os.path.join(home_directory, 'Desktop/archive/sign_mnist_train.csv')
test_file_path = os.path.join(home_directory, 'Desktop/archive/sign_mnist_test.csv')

# Load the datasets
train_df = pd.read_csv(train_file_path)
test_df = pd.read_csv(test_file_path)

# Vectorize data, and  normalize

x_train = train_df.iloc[:, 1:].values / 255.0
x_test = test_df.iloc[:, 1:].values / 255.0

# Reshape the pixel values into flat vectors
x_train = x_train.reshape(-1, 28*28)
x_test = x_test.reshape(-1, 28*28)

# Now separate our dataframes into inputs (features) and outputs (labels)
y_train = train_df['label'].values  # Convert to numpy array
y_test = test_df['label'].values    # Convert to numpy array

# Convert labels to one-hot encoded format
num_classes = 26  # labels 0-25 classes 
y_train_encoded = np.eye(num_classes)[y_train]
y_test_encoded = np.eye(num_classes)[y_test]
